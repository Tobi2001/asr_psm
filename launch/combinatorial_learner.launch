<!-- Launches the learner for probabilistic scene models.
This launch file is specifically designed for launching the learner to use combinatorial optimization to generate object relation graphs.
Incoming AsrScenGraph messages are collected and being used for model learning. -->
<launch>
  <node name="js_probabilistic_scene_learner_and_inference" pkg="asr_psm" type="learner" output="screen">
    <!-- The list of basg files containing scene graphs that should be used for learning. -->
    <rosparam param="input_db_file">
    /home/SMBAD/students/nikolai/catkin_ws/src/psm_evaluation/falsepositive/falsepositive_learningdata.sqlite
    </rosparam>
    <!-- That's how the scene should be called. -->
    <param name="scene_model_name" value="falsepositive"/>
    <!-- The type of the scene that should be learned. -->
    <param name="scene_model_type" value="ocm"/>
    <!-- That's where the resulting model xml file should be stored. -->
    <param name="scene_model_directory" value="$(find psm_evaluation)/falsepositive"/>
    <!-- The volume of the workspace we're working in in qubic meters. -->
    <param name="workspace_volume" value="8.0"/>
    <!-- Static break ratio for the tree generation. -->
    <param name="static_break_ratio" value="1.01"/>
    <!-- Together ratio for the tree generation. -->
    <param name="together_ratio" value="0.90"/>
    <!-- Set true to show intermediate results instead. -->
    <param name="intermediate_results" value="false"/>
    <!-- Set true to add timestamps to filename. -->
    <param name="timestamps" value="false"/>
    <!-- The minimal number of kernels. -->
    <param name="kernels_min" value="1"/>
    <!-- The maximal number of kernels. -->
    <param name="kernels_max" value="2"/>
    <!-- The number of runs per kernel. -->
    <param name="runs_per_kernel" value="3"/>
    <!-- The number of samples to gereate for every recorded sample. -->
    <param name="synthetic_samples" value="1"/>
    <!-- The position interval for the sample relaxiation (in meters). -->
    <param name="interval_position" value="0.25"/>
    <!-- The orientation interval for the sample relaxiation (in degrees). -->
    <param name="interval_orientation" value="10"/>
    <!-- Path to the orientation plot. Set to value "UNDEFINED", to prevent export of orientation plots. -->
    <param name="orientation_plot_path" value="UNDEFINED"/>
    <!-- Max angle deviation for the tree generation. -->
    <param name="max_angle_deviation" value="45"/>
    <!--The name of the frame the objects should be transformed to. -->
    <param name="base_frame_id" value="/PTU"/>
    <!-- The visualization is pretty small, this scale factor enlarges it. -->
    <param name="scale_factor" value="1.0"/>
    <!-- This factor determines the multiple of the standard deviation. -->
    <param name="sigma_multiplicator" value="3.0"/>
    <!-- How often the learner attempts to learn a valid model in each run until it gives up and throws an error.
    After half the attempts, the learner switches from a generic to a less precise but more stable diagonal matrix as base for the covariance matrices.
    Use "2" if each matrix type should be tried exactly once and "1" if only a generic matrix should be used once. -->
    <param name="attempts_per_run" value="100" />
    
    <!-- INFERENCE PARAMETERS: -->
    <!-- Set true, to overwrite the visualization of results and plot the target distributions instead. -->
    <param name="targeting_help" value="false"/>
    <!-- The name of the inference algorithm. There are 'powerset', 'summarized', 'multiplied' and 'maximum'. -->
    <!-- Used in OcmForegroundSceneLearner.cpp -->
    <param name="inference_algorithm" value="maximum"/>
    <!-- The path to the directory that should hold the log files containing the runtimes of the different scenes. -->
    <!-- To deactivate logging, remove this line from the launch file. Runtime will then be printed to console. -->
    <!--<param name="runtime_log_path" value="/media/data_ext/data/gehrung/evaluation"/>-->
    
    <!-- The type of the relation tree trainer. There are "tree" - Hierarchical tree with agglomerative clustering (old method), "fullymeshed" - fully meshed topology, "combinatorial_optimization" -->
    <param name="relation_tree_trainer_type" value="tree"/>
    <!--Load some parameters for the combinatorial optimization trainer. -->
    <rosparam file="$(find asr_psm)/launch/combinatorial_optimization.yaml"/>
  </node>
</launch>
